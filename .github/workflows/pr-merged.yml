name: 2. Build & Deploy Project

on:
  release:
    types: [ published ]
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: testbed-shacl-validator

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # TODO: setup Maven
      #      # Maven
      #      - name: Set up Maven Central Repository
      #        uses: actions/setup-java@v4
      #        with:
      #          java-version: '21'
      #          distribution: 'zulu'
      #          server-id: ossrh
      #          server-username: MAVEN_USERNAME
      #          server-password: MAVEN_PASSWORD
      #          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
      #          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      # TODO: setup Sonar
      - name: Analyse & publish package
        run: |
          mvn -B verify install
          export VERSION=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JARs
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            **/testbed-shacl-validator.jar
  create-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Download JARs
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: .github
      - name: Define docker variables
        run: |
          echo "IMAGE_TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
          echo "IMAGES=${{ env.REGISTRY }}/Informatievlaanderen/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV
          echo "LATEST=latest" >> $GITHUB_ENV
      # TODO: push to docker
      - name: Log in to the GitHub Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: Informatievlaanderen
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGES }}
          tags: |
            type=raw,value=${{env.IMAGE_TAG}}
            type=raw,value=${{env.LATEST}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .github
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
